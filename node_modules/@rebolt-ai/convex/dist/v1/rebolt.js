"use strict";var a=Object.defineProperty;var pt=Object.getOwnPropertyDescriptor;var lt=Object.getOwnPropertyNames;var ct=Object.prototype.hasOwnProperty;var ut=(o,e)=>{for(var n in e)a(o,n,{get:e[n],enumerable:!0})},dt=(o,e,n,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of lt(e))!ct.call(o,i)&&i!==n&&a(o,i,{get:()=>e[i],enumerable:!(t=pt(e,i))||t.enumerable});return o};var _t=o=>dt(a({},"__esModule",{value:!0}),o);var mt={};ut(mt,{Rebolt:()=>C});module.exports=_t(mt);var p="GMAIL_SEND_EMAIL",U={action_id:p,version:"1.0.0",action_type:{}};var l="GMAIL_DELETE_EMAIL",w={action_id:l,version:"1.0.0",action_type:{}};var c="GMAIL_LIST_EMAILS",N={action_id:c,version:"1.0.0",action_type:{}};var u="GMAIL_REPLY_TO_EMAIL",V={action_id:u,version:"1.0.0",action_type:{}};var d="GDRIVE_CREATE_FOLDER",W={action_id:d,version:"1.0.0",action_type:{}};var _="GDRIVE_DELETE_RESOURCE",k={action_id:_,version:"1.0.0",action_type:{}};var m="GDRIVE_DOWNLOAD_FILE",B={action_id:m,version:"1.0.0",action_type:{}};var f="GDRIVE_GET_MOUNT_POINTS",X={action_id:f,version:"1.0.0",action_type:{}};var A="GDRIVE_LIST_ITEMS",$={action_id:A,version:"1.0.0",action_type:{}};var E="GDRIVE_UPLOAD_FILE",j={action_id:E,version:"1.0.0",action_type:{}};var O="ONEDRIVE_CREATE_FOLDER",K={action_id:O,version:"1.0.0",action_type:{}};var x="ONEDRIVE_DELETE_RESOURCE",z={action_id:x,version:"1.0.0",action_type:{}};var D="ONEDRIVE_DOWNLOAD_FILE",H={action_id:D,version:"1.0.0",action_type:{}};var g="ONEDRIVE_GET_MOUNT_POINTS",q={action_id:g,version:"1.0.0",action_type:{}};var I="ONEDRIVE_LIST_ITEMS",Y={action_id:I,version:"1.0.0",action_type:{}};var R="ONEDRIVE_UPLOAD_FILE",J={action_id:R,version:"1.0.0",action_type:{}};var y="RESEND_SEND_EMAIL",Q={action_id:y,version:"1.0.0",action_type:{}};var v="RUN_REBOLT_AGENT",Z={action_id:v,version:"1.0.0",action_type:{}};var M="EXA_AI_WEB_SEARCH",tt={action_id:M,version:"1.0.0",action_type:{}};var b="EXA_AI_WEB_CRAWL",et={action_id:b,version:"1.0.0",action_type:{}};var G="DROPBOX_CREATE_FOLDER",it={action_id:G,version:"1.0.0",action_type:{}};var L="DROPBOX_DELETE_RESOURCE",nt={action_id:L,version:"1.0.0",action_type:{}};var T="DROPBOX_DOWNLOAD_FILE",ot={action_id:T,version:"1.0.0",action_type:{}};var F="DROPBOX_GET_MOUNT_POINTS",rt={action_id:F,version:"1.0.0",action_type:{}};var h="DROPBOX_LIST_ITEMS",st={action_id:h,version:"1.0.0",action_type:{}};var P="DROPBOX_UPLOAD_FILE",at={action_id:P,version:"1.0.0",action_type:{}};var S={[p]:U,[l]:w,[c]:N,[u]:V,[d]:W,[_]:k,[m]:B,[f]:X,[A]:$,[E]:j,[O]:K,[x]:z,[D]:H,[g]:q,[I]:Y,[R]:J,[y]:Q,[v]:Z,[M]:tt,[b]:et,[G]:it,[L]:nt,[T]:ot,[F]:rt,[h]:st,[P]:at};var r=class{baseURL;apiKey;constructor(e){if(!e.apiKey)throw new Error("Rebolt API key is required.");this.baseURL=e.baseURL||"https://sdk.rebolt.ai/sdk/v1.0",this.apiKey=e.apiKey}async post(e,n){let t=`${this.baseURL}${e}`;try{let i=await fetch(t,{method:"POST",headers:{"x-api-key":this.apiKey,"Content-Type":"application/json"},body:JSON.stringify(n)});if(!i.ok)throw await i.json().catch(()=>({message:`HTTP error! status: ${i.status}`}));return await i.json()}catch(i){throw console.error(`API call to ${t} failed:`,i),i}}async get(e){let n=`${this.baseURL}${e}`;try{let t=await fetch(n,{method:"GET",headers:{"x-api-key":this.apiKey,Accept:"application/json"}});if(!t.ok)throw await t.json().catch(()=>({detail:`HTTP error! status: ${t.status}`}));return await t.json()}catch(t){throw console.error(`API call to ${n} failed:`,t),t}}async delete(e){let n=`${this.baseURL}${e}`;try{let t=await fetch(n,{method:"DELETE",headers:{"x-api-key":this.apiKey}});if(!t.ok)throw await t.json().catch(()=>({detail:`HTTP error! status: ${t.status}`}))}catch(t){throw console.error(`API call to ${n} failed:`,t),t}}async postFormData(e,n){let t=`${this.baseURL}${e}`;try{let i=await fetch(t,{method:"POST",headers:{"x-api-key":this.apiKey},body:n});if(!i.ok)throw await i.json().catch(()=>({detail:`HTTP error! status: ${i.status}`}));return await i.json()}catch(i){throw console.error(`API call to ${t} failed:`,i),i}}async getBlob(e){let n=`${this.baseURL}${e}`;try{let t=await fetch(n,{method:"GET",headers:{"x-api-key":this.apiKey}});if(!t.ok)throw await t.json().catch(()=>({detail:`HTTP error! status: ${t.status}`}));return await t.blob()}catch(t){throw console.error(`API call to ${n} failed:`,t),t}}};var C=class{client;actions;config;constructor(e={}){this.config=this.applyDefaultConfig(e),this.client=new r(this.config),this.actions=this.createActions()}applyDefaultConfig(e){let n=e.apiKey??process.env.REBOLT_API_KEY;if(!n)throw new Error("Rebolt API key is required. Provide it in the config or set REBOLT_API_KEY environment variable.");let t=e.baseURL??process.env.REBOLT_BASE_URL??"https://sdk.rebolt.ai/sdk/v1.0";return{apiKey:n,baseURL:t}}async executeAction(e,n,t){let{inputs:i,config:s}=t;return await this.client.post("/integrations/actions/run",{action_id:e,action_version:n.version,credential_id:s?.credential_id,inputs:i})}createActions(){let e={},n=Object.keys(S);for(let t of n){let i=S[t];e[t]=this.createAction(t,i)}return e}createAction(e,n){return t=>this.executeAction(e,n,t)}};0&&(module.exports={Rebolt});
