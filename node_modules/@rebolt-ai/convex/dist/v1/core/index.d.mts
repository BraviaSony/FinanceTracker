export { c as Action, a as ActionConfig, b as ActionExecutionResponse, e as ActionManifest, A as ActionMap, d as AnyAction, aV as DROPBOX_CREATE_FOLDER, a_ as DROPBOX_DELETE_RESOURCE, b3 as DROPBOX_DOWNLOAD_FILE, b8 as DROPBOX_GET_MOUNT_POINTS, bd as DROPBOX_LIST_ITEMS, bi as DROPBOX_UPLOAD_FILE, aY as DropboxCreateFolderAction, aW as DropboxCreateFolderInputs, aZ as DropboxCreateFolderManifest, aX as DropboxCreateFolderOutputs, b1 as DropboxDeleteResourceAction, a$ as DropboxDeleteResourceInputs, b2 as DropboxDeleteResourceManifest, b0 as DropboxDeleteResourceOutputs, b6 as DropboxDownloadFileAction, b4 as DropboxDownloadFileInputs, b7 as DropboxDownloadFileManifest, b5 as DropboxDownloadFileOutputs, bb as DropboxGetMountPointsAction, b9 as DropboxGetMountPointsInputs, bc as DropboxGetMountPointsManifest, ba as DropboxGetMountPointsOutputs, bg as DropboxListItemsAction, be as DropboxListItemsInputs, bh as DropboxListItemsManifest, bf as DropboxListItemsOutputs, bl as DropboxUploadFileAction, bj as DropboxUploadFileInputs, bm as DropboxUploadFileManifest, bk as DropboxUploadFileOutputs, aQ as EXA_AI_WEB_CRAWL, aL as EXA_AI_WEB_SEARCH, aT as ExaAiWebCrawlAction, aR as ExaAiWebCrawlInputs, aU as ExaAiWebCrawlManifest, aS as ExaAiWebCrawlOutputs, aO as ExaAiWebSearchAction, aM as ExaAiWebSearchInputs, aP as ExaAiWebSearchManifest, aN as ExaAiWebSearchOutputs, D as GDRIVE_CREATE_FOLDER, J as GDRIVE_DELETE_RESOURCE, O as GDRIVE_DOWNLOAD_FILE, U as GDRIVE_GET_MOUNT_POINTS, Z as GDRIVE_LIST_ITEMS, a2 as GDRIVE_UPLOAD_FILE, n as GMAIL_DELETE_EMAIL, s as GMAIL_LIST_EMAILS, x as GMAIL_REPLY_TO_EMAIL, G as GMAIL_SEND_EMAIL, H as GdriveCreateFolderAction, E as GdriveCreateFolderInputs, I as GdriveCreateFolderManifest, F as GdriveCreateFolderOutputs, M as GdriveDeleteResourceAction, K as GdriveDeleteResourceInputs, N as GdriveDeleteResourceManifest, L as GdriveDeleteResourceOutputs, S as GdriveDownloadFileAction, P as GdriveDownloadFileInputs, T as GdriveDownloadFileManifest, Q as GdriveDownloadFileOutputs, X as GdriveGetMountPointsAction, V as GdriveGetMountPointsInputs, Y as GdriveGetMountPointsManifest, W as GdriveGetMountPointsOutputs, a0 as GdriveListItemsAction, _ as GdriveListItemsInputs, a1 as GdriveListItemsManifest, $ as GdriveListItemsOutputs, a5 as GdriveUploadFileAction, a3 as GdriveUploadFileInputs, a6 as GdriveUploadFileManifest, a4 as GdriveUploadFileOutputs, q as GmailDeleteEmailAction, o as GmailDeleteEmailInputs, r as GmailDeleteEmailManifest, p as GmailDeleteEmailOutputs, v as GmailListEmailsAction, t as GmailListEmailsInputs, w as GmailListEmailsManifest, u as GmailListEmailsOutputs, B as GmailReplyToEmailAction, y as GmailReplyToEmailInputs, C as GmailReplyToEmailManifest, z as GmailReplyToEmailOutputs, l as GmailSendEmailAction, j as GmailSendEmailInputs, m as GmailSendEmailManifest, k as GmailSendEmailOutputs, a7 as ONEDRIVE_CREATE_FOLDER, ac as ONEDRIVE_DELETE_RESOURCE, ah as ONEDRIVE_DOWNLOAD_FILE, am as ONEDRIVE_GET_MOUNT_POINTS, ar as ONEDRIVE_LIST_ITEMS, aw as ONEDRIVE_UPLOAD_FILE, aa as OnedriveCreateFolderAction, a8 as OnedriveCreateFolderInputs, ab as OnedriveCreateFolderManifest, a9 as OnedriveCreateFolderOutputs, af as OnedriveDeleteResourceAction, ad as OnedriveDeleteResourceInputs, ag as OnedriveDeleteResourceManifest, ae as OnedriveDeleteResourceOutputs, ak as OnedriveDownloadFileAction, ai as OnedriveDownloadFileInputs, al as OnedriveDownloadFileManifest, aj as OnedriveDownloadFileOutputs, ap as OnedriveGetMountPointsAction, an as OnedriveGetMountPointsInputs, aq as OnedriveGetMountPointsManifest, ao as OnedriveGetMountPointsOutputs, au as OnedriveListItemsAction, as as OnedriveListItemsInputs, av as OnedriveListItemsManifest, at as OnedriveListItemsOutputs, az as OnedriveUploadFileAction, ax as OnedriveUploadFileInputs, aA as OnedriveUploadFileManifest, ay as OnedriveUploadFileOutputs, aB as RESEND_SEND_EMAIL, aG as RUN_REBOLT_AGENT, R as ReboltActionType, g as ReboltActionTypeValue, aE as ResendSendEmailAction, aC as ResendSendEmailInputs, aF as ResendSendEmailManifest, aD as ResendSendEmailOutputs, aJ as RunReboltAgentAction, aH as RunReboltAgentInputs, aK as RunReboltAgentManifest, aI as RunReboltAgentOutputs, f as actionDefinitions, h as getAllActionTypes, i as isValidActionType } from '../../mapping-C_BeZ11d.mjs';

type FileMetadataType = Record<string, string | number | boolean | null>;
interface FileInfo {
    id: string;
    name: string;
    size: number;
    content_type: string;
    created_at: string;
    updated_at: string;
    path: string[];
    metadata: FileMetadataType;
}
interface UploadConstraints {
    maxFileSize?: number;
    allowedTypes?: string[];
    maxFilenameLength?: number;
}
interface UploadOptions {
    folder?: string[];
    metadata?: FileMetadataType;
    constraints?: UploadConstraints;
}
declare enum SortByColumn {
    CREATED_AT = "created_at",
    UPDATED_AT = "updated_at",
    NAME = "name",
    SIZE = "size",
    LAST_ACCESSED_AT = "last_accessed_at",
    CONTENT_TYPE = "content_type"
}
declare enum SortByDirection {
    ASC = "asc",
    DESC = "desc"
}
interface SortParameters {
    sort_by: SortByColumn;
    sort_direction: SortByDirection;
}
interface ListOptions {
    folder?: string[];
    limit?: number;
    offset?: number;
    search?: string;
    sort_by?: SortParameters;
}
interface FileListResponse {
    files: FileInfo[];
    total: number;
    has_more: boolean;
}
interface FileDownloadURLResponse {
    download_url: string;
    expires_at: string;
}
interface FileErrorResponse {
    detail: string;
    status_code?: number;
}

type UserRole = (typeof VALID_ROLES)[keyof typeof VALID_ROLES];
declare const VALID_ROLES: {
    readonly ADMIN: "admin";
    readonly EDITOR: "editor";
    readonly VIEWER: "viewer";
};
declare const roleHierarchy: Record<UserRole, number>;
declare function checkUserPermission(userRole: UserRole, requiredRole: UserRole): boolean;

interface LoggedInUser {
    user_id: string;
    name: string;
    email: string;
    profilePicture: string | null | undefined;
    role: UserRole;
}

export { type FileDownloadURLResponse, type FileErrorResponse, type FileInfo, type FileListResponse, type FileMetadataType, type ListOptions, type LoggedInUser, SortByColumn, SortByDirection, type SortParameters, type UploadConstraints, type UploadOptions, type UserRole, VALID_ROLES, checkUserPermission, roleHierarchy };
